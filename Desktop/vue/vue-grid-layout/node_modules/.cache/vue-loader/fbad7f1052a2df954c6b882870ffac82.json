{"remainingRequest":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\src\\App.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\src\\App.vue","mtime":1618660996249},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\omar-\\Desktop\\vue\\vue-grid-layout\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  /*text-align: center;*/\r\n  color: #2c3e50;\r\n  /*margin-top: 60px;*/\r\n}\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <div id=\"app\">\r\n        <h1 style=\"text-align: center\">Vue Grid Layout</h1>\r\n        <!--<pre>{{ layout | json }}</pre>-->\r\n        <div>\r\n            <div class=\"layoutJSON\">\r\n                Displayed as <code>[x, y, w, h]</code>:\r\n                <div class=\"columns\">\r\n                    <div class=\"layoutItem\" v-for=\"item in layout\" :key=\"item.i\">\r\n                        <b>{{item.i}}</b>: [{{item.x}}, {{item.y}}, {{item.w}}, {{item.h}}]\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"layoutJSON\">\r\n                Displayed as <code>[x, y, w, h]</code>:\r\n                <div class=\"columns\">\r\n                    <div class=\"layoutItem\" v-for=\"item in layout2\">\r\n                        <b>{{item.i}}</b>: [{{item.x}}, {{item.y}}, {{item.w}}, {{item.h}}]\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n        <div id=\"content\">\r\n            <button @click=\"decreaseWidth\">Decrease Width</button>\r\n            <button @click=\"increaseWidth\">Increase Width</button>\r\n            <button @click=\"addItem\">Add an item</button>\r\n            <button @click=\"addItemDynamically\">Add an item dynamically</button>\r\n            <!-- Add to show rtl support -->\r\n            <button @click=\"changeDirection\">Change Direction</button>\r\n            <input type=\"checkbox\" v-model=\"draggable\"/> Draggable\r\n            <input type=\"checkbox\" v-model=\"resizable\"/> Resizable\r\n            <input type=\"checkbox\" v-model=\"mirrored\"/> Mirrored\r\n            <input type=\"checkbox\" v-model=\"responsive\"/> Responsive\r\n            <input type=\"checkbox\" v-model=\"preventCollision\"/> Prevent Collision\r\n            <div style=\"margin-top: 10px;margin-bottom: 10px;\">\r\n                Row Height: <input type=\"number\" v-model=\"rowHeight\"/> Col nums: <input type=\"number\" v-model=\"colNum\"/>\r\n                Margin x: <input type=\"number\" v-model=\"marginX\"/> Margin y: <input type=\"number\" v-model=\"marginY\"/>\r\n            </div>\r\n            <grid-layout\r\n                :margin=\"[parseInt(marginX), parseInt(marginY)]\"\r\n                    :layout.sync=\"layout\"\r\n                    :col-num=\"parseInt(colNum)\"\r\n                    :row-height=\"rowHeight\"\r\n                    :is-draggable=\"draggable\"\r\n                    :is-resizable=\"resizable\"\r\n                    :is-mirrored=\"mirrored\"\r\n                    :prevent-collision=\"preventCollision\"\r\n                    :vertical-compact=\"compact\"\r\n                    :use-css-transforms=\"true\"\r\n                    :responsive=\"responsive\"\r\n                    @layout-created=\"layoutCreatedEvent\"\r\n                    @layout-before-mount=\"layoutBeforeMountEvent\"\r\n                    @layout-mounted=\"layoutMountedEvent\"\r\n                    @layout-ready=\"layoutReadyEvent\"\r\n                    @layout-updated=\"layoutUpdatedEvent\"\r\n                    @breakpoint-changed=\"breakpointChangedEvent\"\r\n            >\r\n                <grid-item v-for=\"item in layout\" :key=\"item.i\"\r\n                           :static=\"item.static\"\r\n                           :x=\"item.x\"\r\n                           :y=\"item.y\"\r\n                           :w=\"item.w\"\r\n                           :h=\"item.h\"\r\n                           :i=\"item.i\"\r\n                           :min-w=\"item.minW\"\r\n                           :max-w=\"item.maxW\"\r\n                           :min-x=\"item.minX\"\r\n                           :max-x=\"item.maxX\"\r\n                           :min-y=\"item.minY\"\r\n                           :max-y=\"item.maxY\"\r\n                           :preserve-aspect-ratio=\"item.preserveAspectRatio\"\r\n                           @resize=\"resize\"\r\n                           @move=\"move\"\r\n                           @resized=\"resized\"\r\n                           @container-resized=\"containerResized\"\r\n                           @moved=\"moved\"\r\n                >\r\n                    <!--<custom-drag-element :text=\"item.i\"></custom-drag-element>-->\r\n                    <test-element :text=\"item.i\" @removeItem=\"removeItem($event)\"></test-element>\r\n                    <!--<button @click=\"clicked\">CLICK ME!</button>-->\r\n                </grid-item>\r\n            </grid-layout>\r\n            <hr/>\r\n            <!--<grid-layout\r\n                    :layout=\"layout2\"\r\n                    :col-num=\"12\"\r\n                    :row-height=\"rowHeight\"\r\n                    :is-draggable=\"draggable\"\r\n                    :is-resizable=\"resizable\"\r\n                    :vertical-compact=\"true\"\r\n                    :use-css-transforms=\"true\"\r\n            >\r\n                <grid-item v-for=\"item in layout2\" :key=\"item.i\"\r\n                           :x=\"item.x\"\r\n                           :y=\"item.y\"\r\n                           :w=\"item.w\"\r\n                           :h=\"item.h\"\r\n                           :min-w=\"2\"\r\n                           :min-h=\"2\"\r\n                           :i=\"item.i\"\r\n                           :is-draggable=\"item.draggable\"\r\n                           :is-resizable=\"item.resizable\"\r\n                >\r\n                    <test-element :text=\"item.i\"></test-element>\r\n                </grid-item>\r\n            </grid-layout>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import GridItem from './components/GridItem.vue';\r\n    import GridLayout from './components/GridLayout.vue';\r\n    // import ResponsiveGridLayout from './components/ResponsiveGridLayout.vue';\r\n    import TestElement from './components/TestElement.vue';\r\n    import CustomDragElement from './components/CustomDragElement.vue';\r\n    import {getDocumentDir, setDocumentDir} from \"./helpers/DOM\";\r\n    //var eventBus = require('./eventBus');\r\n\r\n    let testLayout = [\r\n        {\"x\":0,\"y\":0,\"w\":2,\"h\":2,\"i\":\"0\", resizable: true, draggable: true, static: false, minY: 0, maxY: 2},\r\n        {\"x\":2,\"y\":0,\"w\":2,\"h\":4,\"i\":\"1\", resizable: null, draggable: null, static: true},\r\n        {\"x\":4,\"y\":0,\"w\":2,\"h\":5,\"i\":\"2\", resizable: false, draggable: false, static: false, minX: 4, maxX: 4, minW: 2, maxW: 2, preserveAspectRatio: true},\r\n        {\"x\":6,\"y\":0,\"w\":2,\"h\":3,\"i\":\"3\", resizable: false, draggable: false, static: false},\r\n        {\"x\":8,\"y\":0,\"w\":2,\"h\":3,\"i\":\"4\", resizable: false, draggable: false, static: false},\r\n        {\"x\":10,\"y\":0,\"w\":2,\"h\":3,\"i\":\"5\", resizable: false, draggable: false, static: false},\r\n        {\"x\":0,\"y\":5,\"w\":2,\"h\":5,\"i\":\"6\", resizable: false, draggable: false, static: false},\r\n        {\"x\":2,\"y\":5,\"w\":2,\"h\":5,\"i\":\"7\", resizable: false, draggable: false, static: false},\r\n        {\"x\":4,\"y\":5,\"w\":2,\"h\":5,\"i\":\"8\", resizable: false, draggable: false, static: false},\r\n        {\"x\":6,\"y\":3,\"w\":2,\"h\":4,\"i\":\"9\", resizable: false, draggable: false, static: true},\r\n        {\"x\":8,\"y\":4,\"w\":2,\"h\":4,\"i\":\"10\", resizable: false, draggable: false, static: false},\r\n        {\"x\":10,\"y\":4,\"w\":2,\"h\":4,\"i\":\"11\", resizable: false, draggable: false, static: false, minY: 4},\r\n        {\"x\":0,\"y\":10,\"w\":2,\"h\":5,\"i\":\"12\", resizable: false, draggable: false, static: false},\r\n        {\"x\":2,\"y\":10,\"w\":2,\"h\":5,\"i\":\"13\", resizable: false, draggable: false, static: false},\r\n        {\"x\":4,\"y\":8,\"w\":2,\"h\":4,\"i\":\"14\", resizable: false, draggable: false, static: false},\r\n        {\"x\":6,\"y\":8,\"w\":2,\"h\":4,\"i\":\"15\", resizable: false, draggable: false, static: false},\r\n        {\"x\":8,\"y\":10,\"w\":2,\"h\":5,\"i\":\"16\", resizable: false, draggable: false, static: false},\r\n        {\"x\":10,\"y\":4,\"w\":2,\"h\":2,\"i\":\"17\", resizable: false, draggable: false, static: false},\r\n        {\"x\":0,\"y\":9,\"w\":2,\"h\":3,\"i\":\"18\", resizable: false, draggable: false, static: false},\r\n        {\"x\":2,\"y\":6,\"w\":2,\"h\":2,\"i\":\"19\", resizable: false, draggable: false, static: false}\r\n    ];\r\n\r\n    /*let testLayout = [\r\n        { x: 0, y: 0, w: 2, h: 2, i: \"0\" },\r\n        { x: 2, y: 0, w: 2, h: 2, i: \"1\" },\r\n        { x: 4, y: 0, w: 2, h: 2, i: \"2\" },\r\n        { x: 6, y: 0, w: 2, h: 2, i: \"3\" },\r\n        { x: 8, y: 0, w: 2, h: 2, i: \"4\" },\r\n    ];*/\r\n\r\n    export default {\r\n        name: 'app',\r\n        components: {\r\n            GridLayout,\r\n            GridItem,\r\n            TestElement,\r\n            CustomDragElement,\r\n        },\r\n        data () {\r\n            return {\r\n                layout: JSON.parse(JSON.stringify(testLayout)),\r\n                layout2: JSON.parse(JSON.stringify(testLayout)),\r\n                draggable: true,\r\n                resizable: true,\r\n                mirrored: false,\r\n                responsive: true,\r\n                preventCollision: false,\r\n                compact: true,\r\n                rowHeight: 30,\r\n                colNum: 12,\r\n                index: 0,\r\n                marginX: 10,\r\n                marginY: 10,\r\n            }\r\n        },\r\n        mounted: function () {\r\n            this.index = this.layout.length;\r\n        },\r\n        methods: {\r\n            clicked: function() {\r\n                window.alert(\"CLICK!\");\r\n            },\r\n            increaseWidth: function() {\r\n                let width = document.getElementById(\"content\").offsetWidth;\r\n                width += 20;\r\n                document.getElementById(\"content\").style.width = width+\"px\";\r\n            },\r\n            decreaseWidth: function() {\r\n                let width = document.getElementById(\"content\").offsetWidth;\r\n                width -= 20;\r\n                document.getElementById(\"content\").style.width = width+\"px\";\r\n            },\r\n            removeItem: function(i) {\r\n                console.log(\"### REMOVE \" + i);\r\n                const index = this.layout.map(item => item.i).indexOf(i);\r\n                this.layout.splice(index, 1);\r\n            },\r\n            addItem: function() {\r\n                // let self = this;\r\n                //console.log(\"### LENGTH: \" + this.layout.length);\r\n                let item = {\"x\":0,\"y\":0,\"w\":2,\"h\":2,\"i\":this.index+\"\", whatever: \"bbb\"};\r\n                this.index++;\r\n                this.layout.push(item);\r\n            },\r\n            addItemDynamically: function() {\r\n                const x = (this.layout.length * 2) % (this.colNum || 12);\r\n                const y = this.layout.length + (this.colNum || 12);\r\n                console.log(\"X=\" + x + \" Y=\" + y)\r\n                let item = {\r\n                  x: x,\r\n                  y: y,\r\n                  w: 2,\r\n                  h: 2,\r\n                  i: this.index+\"\",\r\n                }\r\n                this.index++;\r\n                this.layout.push(item);\r\n            },\r\n            move: function(i, newX, newY){\r\n                console.log(\"MOVE i=\" + i + \", X=\" + newX + \", Y=\" + newY);\r\n            },\r\n            resize: function(i, newH, newW, newHPx, newWPx){\r\n                console.log(\"RESIZE i=\" + i + \", H=\" + newH + \", W=\" + newW + \", H(px)=\" + newHPx + \", W(px)=\" + newWPx);\r\n            },\r\n            moved: function(i, newX, newY){\r\n                console.log(\"### MOVED i=\" + i + \", X=\" + newX + \", Y=\" + newY);\r\n            },\r\n            resized: function(i, newH, newW, newHPx, newWPx){\r\n                console.log(\"### RESIZED i=\" + i + \", H=\" + newH + \", W=\" + newW + \", H(px)=\" + newHPx + \", W(px)=\" + newWPx);\r\n            },\r\n            containerResized: function(i, newH, newW, newHPx, newWPx){\r\n                console.log(\"### CONTAINER RESIZED i=\" + i + \", H=\" + newH + \", W=\" + newW + \", H(px)=\" + newHPx + \", W(px)=\" + newWPx);\r\n            },\r\n            /**\r\n             * Add change direction button\r\n             */\r\n            changeDirection() {\r\n                let documentDirection = getDocumentDir();\r\n                let toggle = \"\";\r\n                if (documentDirection === \"rtl\") {\r\n                    toggle = \"ltr\"\r\n                } else {\r\n                    toggle = \"rtl\"\r\n                }\r\n                setDocumentDir(toggle);\r\n                //eventBus.$emit('directionchange');\r\n            },\r\n\r\n            layoutCreatedEvent: function(newLayout){\r\n                console.log(\"Created layout: \", newLayout)\r\n            },\r\n            layoutBeforeMountEvent: function(newLayout){\r\n                console.log(\"beforeMount layout: \", newLayout)\r\n            },\r\n            layoutMountedEvent: function(newLayout){\r\n                console.log(\"Mounted layout: \", newLayout)\r\n            },\r\n            layoutReadyEvent: function(newLayout){\r\n                console.log(\"Ready layout: \", newLayout)\r\n            },\r\n            layoutUpdatedEvent: function(newLayout){\r\n                console.log(\"Updated layout: \", newLayout)\r\n            },\r\n            breakpointChangedEvent: function(newBreakpoint, newLayout){\r\n                console.log(\"breakpoint changed breakpoint=\", newBreakpoint, \", layout: \", newLayout );\r\n            }\r\n\r\n        },\r\n    }\r\n</script>\r\n\r\n<style>\r\n    /*    #app {\r\n            font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n            -webkit-font-smoothing: antialiased;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            text-align: center;\r\n            color: #2c3e50;\r\n            margin-top: 60px;\r\n        }\r\n\r\n        h1, h2 {\r\n            font-weight: normal;\r\n        }\r\n\r\n        ul {\r\n            list-style-type: none;\r\n            padding: 0;\r\n        }\r\n\r\n        li {\r\n            display: inline-block;\r\n            margin: 0 10px;\r\n        }\r\n\r\n        a {\r\n            color: #42b983;\r\n        }*/\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  /*text-align: center;*/\r\n  color: #2c3e50;\r\n  /*margin-top: 60px;*/\r\n}\r\n</style>\r\n"]}]}